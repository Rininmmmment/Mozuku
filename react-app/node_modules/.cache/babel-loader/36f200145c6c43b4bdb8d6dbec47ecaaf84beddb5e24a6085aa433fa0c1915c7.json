{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/ShachiObject.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreeDModel() {\n  _s();\n  const canvasRef = useRef(null);\n  const modelRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    camera.lookAt(0, 0, 0);\n    const renderer = new THREE.WebGLRenderer({\n      canvas\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight); // Canvasの幅と高さをウィンドウのサイズに合わせる\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff);\n    directionalLight.intensity = 5;\n    directionalLight.position.set(5, 5, 10);\n    scene.add(directionalLight);\n    const objLoader = new GLTFLoader();\n    objLoader.load('shachi.glb', function (obj) {\n      modelRef.current = obj.scene;\n      scene.add(obj.scene);\n      animate();\n    }, undefined, function (error) {\n      console.error(\"モデルの読み込み中にエラーが発生しました:\", error);\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      if (modelRef.current) {\n        modelRef.current.rotation.x += 0.01;\n        modelRef.current.rotation.y += 0.01;\n      }\n      renderer.render(scene, camera);\n    }\n    window.addEventListener('resize', () => {\n      // ウィンドウのリサイズ時にCanvasのサイズを調整\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'block'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n}\n_s(ThreeDModel, \"SgRS7HvAZyYx1W1Vd1aEfs8lVP8=\");\n_c = ThreeDModel;\nexport default ThreeDModel;\nvar _c;\n$RefreshReg$(_c, \"ThreeDModel\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","jsxDEV","_jsxDEV","ThreeDModel","_s","canvasRef","modelRef","canvas","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","lookAt","renderer","WebGLRenderer","setSize","directionalLight","DirectionalLight","intensity","set","add","objLoader","load","obj","animate","undefined","error","console","requestAnimationFrame","rotation","x","y","render","addEventListener","aspect","updateProjectionMatrix","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/usr/src/app/src/ShachiObject.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nfunction ThreeDModel() {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const modelRef = useRef<THREE.Object3D | null>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    camera.lookAt(0, 0, 0);\n\n    const renderer = new THREE.WebGLRenderer({ canvas });\n    renderer.setSize(window.innerWidth, window.innerHeight); // Canvasの幅と高さをウィンドウのサイズに合わせる\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff);\n    directionalLight.intensity = 5;\n    directionalLight.position.set(5, 5, 10);\n    scene.add(directionalLight);\n\n    const objLoader = new GLTFLoader();\n    objLoader.load('shachi.glb', function (obj) {      \n      modelRef.current = obj.scene;\n      scene.add(obj.scene);\n      animate();\n    },\n    undefined,\n    function (error) {\n      console.error(\"モデルの読み込み中にエラーが発生しました:\", error);\n    });\n\n    function animate() {\n      requestAnimationFrame(animate);\n\n      if (modelRef.current) {\n        modelRef.current.rotation.x += 0.01;\n        modelRef.current.rotation.y += 0.01;\n      }\n\n      renderer.render(scene, camera);\n    }\n\n    window.addEventListener('resize', () => {\n      // ウィンドウのリサイズ時にCanvasのサイズを調整\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n\n    animate();\n  }, []);\n\n  return <canvas ref={canvasRef} style={{ display: 'block' }} />;\n}\n\nexport default ThreeDModel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
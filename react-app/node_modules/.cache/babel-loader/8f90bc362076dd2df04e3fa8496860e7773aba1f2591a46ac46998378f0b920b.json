{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/ShachiObject.tsx\",\n  _s = $RefreshSig$();\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { useEffect, useRef } from 'react';\nimport styles from '@/styles/Home.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    innerWidth = 1000;\n    innerHeight = 700;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setPixelRatio(devicePixelRatio);\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    const threeModel = mountRef.current;\n    threeModel === null || threeModel === void 0 ? void 0 : threeModel.appendChild(renderer.domElement);\n    const camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);\n    camera.position.set(0, 1.1, 3);\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enablePan = false;\n    controls.enableDamping = true;\n    controls.target.set(0, 0.85, 0);\n    controls.screenSpacePanning = true;\n    controls.update();\n    const scene = new THREE.Scene();\n    const light = new THREE.DirectionalLight(0xffffff);\n    light.position.set(1, 1, 1).normalize();\n    const loader = new GLTFLoader();\n    loader.load('/testmodel.vrm', function (gltf) {\n      scene.add(gltf.scene);\n    }, undefined, function (error) {\n      console.error(error);\n    });\n    const tick = () => {\n      scene.add(light);\n      renderer.render(scene, camera);\n      requestAnimationFrame(tick);\n    };\n    tick();\n    return () => {\n      threeModel === null || threeModel === void 0 ? void 0 : threeModel.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Vroid VRM Model Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Vroid VRM Model Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"width=device-width, initial-scale=1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/favicon.ico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.main,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.vrm,\n        ref: mountRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["THREE","GLTFLoader","OrbitControls","useEffect","useRef","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","mountRef","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","setSize","window","threeModel","current","appendChild","domElement","camera","PerspectiveCamera","position","set","aspect","updateProjectionMatrix","controls","enablePan","enableDamping","target","screenSpacePanning","update","scene","Scene","light","DirectionalLight","normalize","loader","load","gltf","add","undefined","error","console","tick","render","requestAnimationFrame","removeChild","children","Head","fileName","_jsxFileName","lineNumber","columnNumber","name","content","rel","href","className","main","vrm","ref","_c","$RefreshReg$"],"sources":["/usr/src/app/src/ShachiObject.tsx"],"sourcesContent":["\nimport * as THREE from 'three'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\nimport { useEffect, useRef } from 'react'\nimport styles from '@/styles/Home.module.css'\n\n\nexport default function Home() {\n  const mountRef = useRef<HTMLDivElement>(null)\n  useEffect(() => {\n    innerWidth = 1000\n    innerHeight = 700\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n    })\n\n    renderer.setPixelRatio(devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    \n    const threeModel = mountRef.current\n    threeModel?.appendChild(renderer.domElement)\n\n    const camera = new THREE.PerspectiveCamera(\n      45,\n      window.innerWidth / window.innerHeight,\n      1,\n      1000\n    )\n    camera.position.set(0, 1.1, 3)\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    const controls = new OrbitControls(camera, renderer.domElement)\n    controls.enablePan = false\n    controls.enableDamping = true\n    controls.target.set(0, 0.85, 0)\n    controls.screenSpacePanning = true\n    controls.update()\n\n    const scene = new THREE.Scene()\n\n    const light = new THREE.DirectionalLight(0xffffff)\n    light.position.set(1, 1, 1).normalize()\n\n    const loader = new GLTFLoader()\n    loader.load(\n      '/testmodel.vrm',\n      function (gltf) {\n        scene.add(gltf.scene)\n      },\n      undefined,\n      function (error) {\n        console.error(error)\n      }\n    )\n\n    const tick = () => {\n      scene.add(light)\n      renderer.render(scene, camera)\n\n      requestAnimationFrame(tick)\n    }\n\n    tick()\n\n    return () => {\n      threeModel?.removeChild(renderer.domElement)\n    }\n    },[])\n  return (\n    <>\n      <Head>\n        <title>Vroid VRM Model Test</title>\n        <meta name=\"description\" content=\"Vroid VRM Model Test\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n      <main className={styles.main}>\n        <div className={styles.vrm} ref={mountRef} />\n      </main>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
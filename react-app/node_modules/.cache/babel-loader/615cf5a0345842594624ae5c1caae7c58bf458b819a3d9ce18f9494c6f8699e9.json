{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nfunction WebcamCapture() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [result, setResult] = useState();\n  useEffect(() => {\n    const startWebcam = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing webcam:', error);\n      }\n    };\n    startWebcam();\n  }, []);\n  const captureVideoFrame = async () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    if (canvas && video) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // Canvasから画像データを取得\n        const imageDataURL = canvas.toDataURL('image/jpeg');\n\n        // 画像データを送信\n        const response = await fetch('http://localhost:8000/face-detection', {\n          method: 'POST',\n          body: JSON.stringify({\n            image: imageDataURL\n          }),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data.result === 'Yes') {\n            setResult('会いに来てくれたんだね！嬉しいにゃ〜');\n          } else {\n            setResult('遊んでくれなくて悲しいにゃ...');\n          }\n        } else {\n          console.error('Error sending image for analysis');\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    // 10秒ごとにcaptureVideoFrameを呼び出すタイマーを設定\n    const timer = setInterval(captureVideoFrame, 10000);\n\n    // コンポーネントがアンマウントされたときにタイマーをクリア\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return result\n  // <div>\n  //   <button onClick={captureVideoFrame}>Capture and Analyze</button>\n  //   <video style={{ display: 'none' }} ref={videoRef} autoPlay />\n  //   <canvas ref={canvasRef} style={{ display: 'none' }} />\n  //   <p>もずく: {result}</p>\n  // </div>\n  ;\n}\n_s(WebcamCapture, \"ZvDIROb6OW4vEyBBK1kEf1Q86eU=\");\n_c = WebcamCapture;\nexport default WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["useEffect","useRef","useState","WebcamCapture","_s","videoRef","canvasRef","result","setResult","startWebcam","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","captureVideoFrame","canvas","ctx","getContext","drawImage","width","height","imageDataURL","toDataURL","response","fetch","method","body","JSON","stringify","image","headers","ok","data","json","timer","setInterval","clearInterval","_c","$RefreshReg$"],"sources":["/usr/src/app/src/WebcamCapture.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nfunction WebcamCapture() {\n  const videoRef = useRef<HTMLVideoElement | null>(null);\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [result, setResult] = useState<number>();\n\n  useEffect(() => {\n    const startWebcam = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error('Error accessing webcam:', error);\n      }\n    };\n\n    startWebcam();\n  }, []);\n\n  const captureVideoFrame = async () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n\n    if (canvas && video) {\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // Canvasから画像データを取得\n        const imageDataURL = canvas.toDataURL('image/jpeg');\n\n        // 画像データを送信\n        const response = await fetch('http://localhost:8000/face-detection', {\n          method: 'POST',\n          body: JSON.stringify({ image: imageDataURL }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          if (data.result === 'Yes') {\n            setResult('会いに来てくれたんだね！嬉しいにゃ〜');\n          } else {\n            setResult('遊んでくれなくて悲しいにゃ...');\n          }\n        } else {\n          console.error('Error sending image for analysis');\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    // 10秒ごとにcaptureVideoFrameを呼び出すタイマーを設定\n    const timer = setInterval(captureVideoFrame, 10000);\n\n    // コンポーネントがアンマウントされたときにタイマーをクリア\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    result\n    // <div>\n    //   <button onClick={captureVideoFrame}>Capture and Analyze</button>\n    //   <video style={{ display: 'none' }} ref={videoRef} autoPlay />\n    //   <canvas ref={canvasRef} style={{ display: 'none' }} />\n    //   <p>もずく: {result}</p>\n    // </div>\n  );\n}\n\nexport default WebcamCapture;\n"],"mappings":";AAAA,SAAgBA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAE1D,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGJ,MAAM,CAA0B,IAAI,CAAC;EACtD,MAAMK,SAAS,GAAGL,MAAM,CAA2B,IAAI,CAAC;EACxD,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAS,CAAC;EAE9CF,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,IAAIT,QAAQ,CAACU,OAAO,EAAE;UACpBV,QAAQ,CAACU,OAAO,CAACC,SAAS,GAAGN,MAAM;QACrC;MACF,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDR,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,MAAM,GAAGd,SAAS,CAACS,OAAO;IAChC,MAAMD,KAAK,GAAGT,QAAQ,CAACU,OAAO;IAE9B,IAAIK,MAAM,IAAIN,KAAK,EAAE;MACnB,MAAMO,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MACnC,IAAID,GAAG,EAAE;QACPA,GAAG,CAACE,SAAS,CAACT,KAAK,EAAE,CAAC,EAAE,CAAC,EAAEM,MAAM,CAACI,KAAK,EAAEJ,MAAM,CAACK,MAAM,CAAC;;QAEvD;QACA,MAAMC,YAAY,GAAGN,MAAM,CAACO,SAAS,CAAC,YAAY,CAAC;;QAEnD;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,KAAK,EAAER;UAAa,CAAC,CAAC;UAC7CS,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;UAClC,IAAID,IAAI,CAAC9B,MAAM,KAAK,KAAK,EAAE;YACzBC,SAAS,CAAC,oBAAoB,CAAC;UACjC,CAAC,MAAM;YACLA,SAAS,CAAC,kBAAkB,CAAC;UAC/B;QACF,CAAC,MAAM;UACLU,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAC;QACnD;MACF;IACF;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACd;IACA,MAAMuC,KAAK,GAAGC,WAAW,CAACrB,iBAAiB,EAAE,KAAK,CAAC;;IAEnD;IACA,OAAO,MAAM;MACXsB,aAAa,CAACF,KAAK,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OACEhC;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACH,EAAA,CA1EQD,aAAa;AAAAuC,EAAA,GAAbvC,aAAa;AA4EtB,eAAeA,aAAa;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
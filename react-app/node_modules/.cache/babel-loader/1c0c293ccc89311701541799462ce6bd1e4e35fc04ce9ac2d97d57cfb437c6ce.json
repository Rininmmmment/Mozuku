{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/ShachiObject.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef } from 'react';\n// import * as THREE from 'three';\n// import { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\n\n// function ThreeDObject() {\n//   const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n//   useEffect(() => {\n//     const canvas = canvasRef.current;\n//     if (!canvas) return;\n\n//     // シーンの作成\n//     const scene = new THREE.Scene();\n\n//     // カメラの作成\n//     const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n//     camera.position.z = 50000;\n\n//     // レンダラの作成\n//     const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n//     renderer.setSize(canvas.clientWidth, canvas.clientHeight);\n\n//     // OBJファイルの読み込み\n//     const loader = new OBJLoader();\n//     loader.load('3Dmodel/shachi.obj', (obj) => {\n//       // モデル内のオブジェクトをシーンに追加\n//       obj.traverse(function(child) {\n//         if (child instanceof THREE.Mesh) {\n//           scene.add(child);\n//         }\n//       });\n//     }, undefined, (error) => {\n//       console.error(error);\n//     });\n\n//     const light = new THREE.PointLight(0xffffff);\n//     light.position.set(0, 0, 500);\n//     scene.add(light);\n\n//     // レンダリング\n//     const animate = () => {\n//       requestAnimationFrame(animate);\n//       renderer.render(scene, camera);\n//     };\n\n//     animate();\n//   }, []);\n\n//   return <canvas ref={canvasRef} style={{ display: 'block', width: '100%' }} />;\n// }\n\n// export default ThreeDObject;\n\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreeDModel() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const width = 960;\n    const height = 540;\n\n    // レンダラーを作成\n    const canvasElement = canvasRef.current;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      canvas: canvasElement\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(width, height);\n\n    // シーンを作成\n    const scene = new THREE.Scene();\n\n    // カメラを作成\n    const camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n    camera.position.set(0, 0, 600);\n\n    // 環境光源を作成\n    const ambientLight = new THREE.AmbientLight(0xffffff);\n    ambientLight.intensity = 0.5;\n    scene.add(ambientLight);\n\n    // 平行光源を作成\n    const directionalLight = new THREE.DirectionalLight(0xffffff);\n    directionalLight.intensity = 1;\n    directionalLight.position.set(1, 3, 1);\n    scene.add(directionalLight);\n\n    // 3Dモデルの読み込み\n    const objLoader = new OBJLoader();\n    objLoader.load('3Dmodel/shachi.obj', function (obj) {\n      scene.add(obj);\n      obj.position.x = -50;\n      obj.position.y = -100;\n    });\n    function animate() {\n      renderer.render(scene, camera); // レンダリング\n      requestAnimationFrame(animate);\n    }\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'block',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 10\n  }, this);\n}\n_s(ThreeDModel, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ThreeDModel;\nexport default ThreeDModel;\nvar _c;\n$RefreshReg$(_c, \"ThreeDModel\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OBJLoader","jsxDEV","_jsxDEV","ThreeDModel","_s","canvasRef","width","height","canvasElement","current","renderer","WebGLRenderer","antialias","canvas","setPixelRatio","window","devicePixelRatio","setSize","scene","Scene","camera","PerspectiveCamera","position","set","ambientLight","AmbientLight","intensity","add","directionalLight","DirectionalLight","objLoader","load","obj","x","y","animate","render","requestAnimationFrame","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/usr/src/app/src/ShachiObject.tsx"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\n// import * as THREE from 'three';\n// import { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\n\n// function ThreeDObject() {\n//   const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n//   useEffect(() => {\n//     const canvas = canvasRef.current;\n//     if (!canvas) return;\n\n//     // シーンの作成\n//     const scene = new THREE.Scene();\n\n//     // カメラの作成\n//     const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n//     camera.position.z = 50000;\n\n//     // レンダラの作成\n//     const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n//     renderer.setSize(canvas.clientWidth, canvas.clientHeight);\n\n//     // OBJファイルの読み込み\n//     const loader = new OBJLoader();\n//     loader.load('3Dmodel/shachi.obj', (obj) => {\n//       // モデル内のオブジェクトをシーンに追加\n//       obj.traverse(function(child) {\n//         if (child instanceof THREE.Mesh) {\n//           scene.add(child);\n//         }\n//       });\n//     }, undefined, (error) => {\n//       console.error(error);\n//     });\n\n//     const light = new THREE.PointLight(0xffffff);\n//     light.position.set(0, 0, 500);\n//     scene.add(light);\n\n\n//     // レンダリング\n//     const animate = () => {\n//       requestAnimationFrame(animate);\n//       renderer.render(scene, camera);\n//     };\n\n//     animate();\n//   }, []);\n\n//   return <canvas ref={canvasRef} style={{ display: 'block', width: '100%' }} />;\n// }\n\n// export default ThreeDObject;\n\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\n\nfunction ThreeDModel() {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    const width = 960;\n    const height = 540;\n\n    // レンダラーを作成\n    const canvasElement = canvasRef.current;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      canvas: canvasElement!,\n    });\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(width, height);\n\n    // シーンを作成\n    const scene = new THREE.Scene();\n\n    // カメラを作成\n    const camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n    camera.position.set(0, 0, 600);\n\n    // 環境光源を作成\n    const ambientLight = new THREE.AmbientLight(0xffffff);\n    ambientLight.intensity = 0.5;\n    scene.add(ambientLight);\n\n    // 平行光源を作成\n    const directionalLight = new THREE.DirectionalLight(0xffffff);\n    directionalLight.intensity = 1;\n    directionalLight.position.set(1, 3, 1);\n    scene.add(directionalLight);\n\n    // 3Dモデルの読み込み\n    const objLoader = new OBJLoader();\n    objLoader.load('3Dmodel/shachi.obj', function (obj) {\n      scene.add(obj);\n      obj.position.x = -50;\n      obj.position.y = -100;\n    });\n\n    function animate() {\n      renderer.render(scene, camera); // レンダリング\n      requestAnimationFrame(animate);\n    }\n\n    animate();\n  }, []);\n\n  return <canvas ref={canvasRef} style={{ display: 'block', width: '100%' }} />;\n}\n\nexport default ThreeDModel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
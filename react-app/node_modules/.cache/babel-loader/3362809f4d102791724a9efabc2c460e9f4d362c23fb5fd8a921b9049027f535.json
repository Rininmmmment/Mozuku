{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/ShachiObject.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreeDObject() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // シーンの作成\n    const scene = new THREE.Scene();\n\n    // カメラの作成\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n    camera.position.z = 50000;\n\n    // レンダラの作成\n    const renderer = new THREE.WebGLRenderer({\n      canvas,\n      antialias: true\n    });\n    renderer.setSize(canvas.clientWidth, canvas.clientHeight);\n\n    // OBJファイルの読み込み\n    const loader = new OBJLoader();\n    loader.load('3Dmodel/shachi.obj', obj => {\n      // モデル内のオブジェクトをシーンに追加\n      obj.traverse(function (child) {\n        if (child instanceof THREE.Mesh) {\n          scene.add(child);\n        }\n      });\n    }, undefined, error => {\n      console.error(error);\n    });\n    const light = new THREE.PointLight(0xffffff);\n    light.position.set(0, 0, 5);\n    scene.add(light);\n\n    // レンダリング\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'block',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n_s(ThreeDObject, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ThreeDObject;\nexport default ThreeDObject;\nvar _c;\n$RefreshReg$(_c, \"ThreeDObject\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OBJLoader","jsxDEV","_jsxDEV","ThreeDObject","_s","canvasRef","canvas","current","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","antialias","setSize","loader","load","obj","traverse","child","Mesh","add","undefined","error","console","light","PointLight","set","animate","requestAnimationFrame","render","ref","style","display","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/usr/src/app/src/ShachiObject.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader.js';\n\nfunction ThreeDObject() {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // シーンの作成\n    const scene = new THREE.Scene();\n\n    // カメラの作成\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n    camera.position.z = 50000;\n\n    // レンダラの作成\n    const renderer = new THREE.WebGLRenderer({ canvas, antialias: true });\n    renderer.setSize(canvas.clientWidth, canvas.clientHeight);\n\n    // OBJファイルの読み込み\n    const loader = new OBJLoader();\n    loader.load('3Dmodel/shachi.obj', (obj) => {\n      // モデル内のオブジェクトをシーンに追加\n      obj.traverse(function(child) {\n        if (child instanceof THREE.Mesh) {\n          scene.add(child);\n        }\n      });\n    }, undefined, (error) => {\n      console.error(error);\n    });\n\n    const light = new THREE.PointLight(0xffffff);\n    light.position.set(0, 0, 5);\n    scene.add(light);\n\n\n    // レンダリング\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }, []);\n\n  return <canvas ref={canvasRef} style={{ display: 'block', width: '100%' }} />;\n}\n\nexport default ThreeDObject;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,QAAQ,yCAAyC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAGP,MAAM,CAA2B,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;;IAEb;IACA,MAAME,KAAK,GAAG,IAAIT,KAAK,CAACU,KAAK,CAAC,CAAC;;IAE/B;IACA,MAAMC,MAAM,GAAG,IAAIX,KAAK,CAACY,iBAAiB,CAAC,EAAE,EAAEL,MAAM,CAACM,WAAW,GAAGN,MAAM,CAACO,YAAY,EAAE,GAAG,EAAE,IAAI,CAAC;IACnGH,MAAM,CAACI,QAAQ,CAACC,CAAC,GAAG,KAAK;;IAEzB;IACA,MAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,aAAa,CAAC;MAAEX,MAAM;MAAEY,SAAS,EAAE;IAAK,CAAC,CAAC;IACrEF,QAAQ,CAACG,OAAO,CAACb,MAAM,CAACM,WAAW,EAAEN,MAAM,CAACO,YAAY,CAAC;;IAEzD;IACA,MAAMO,MAAM,GAAG,IAAIpB,SAAS,CAAC,CAAC;IAC9BoB,MAAM,CAACC,IAAI,CAAC,oBAAoB,EAAGC,GAAG,IAAK;MACzC;MACAA,GAAG,CAACC,QAAQ,CAAC,UAASC,KAAK,EAAE;QAC3B,IAAIA,KAAK,YAAYzB,KAAK,CAAC0B,IAAI,EAAE;UAC/BjB,KAAK,CAACkB,GAAG,CAACF,KAAK,CAAC;QAClB;MACF,CAAC,CAAC;IACJ,CAAC,EAAEG,SAAS,EAAGC,KAAK,IAAK;MACvBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;IAEF,MAAME,KAAK,GAAG,IAAI/B,KAAK,CAACgC,UAAU,CAAC,QAAQ,CAAC;IAC5CD,KAAK,CAAChB,QAAQ,CAACkB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3BxB,KAAK,CAACkB,GAAG,CAACI,KAAK,CAAC;;IAGhB;IACA,MAAMG,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BjB,QAAQ,CAACmB,MAAM,CAAC3B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDuB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO/B,OAAA;IAAQkC,GAAG,EAAE/B,SAAU;IAACgC,KAAK,EAAE;MAAEC,OAAO,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/E;AAACvC,EAAA,CA9CQD,YAAY;AAAAyC,EAAA,GAAZzC,YAAY;AAgDrB,eAAeA,YAAY;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
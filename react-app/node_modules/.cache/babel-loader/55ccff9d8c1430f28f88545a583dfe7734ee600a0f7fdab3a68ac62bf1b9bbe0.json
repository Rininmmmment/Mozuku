{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/App.tsx\",\n  _s = $RefreshSig$();\n// import React, { useRef } from 'react';\n\n// function Webcam() {\n//   const videoRef = useRef<HTMLVideoElement | null>(null);\n\n//   const startWebcam = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       if (videoRef.current) {\n//         videoRef.current.srcObject = stream;\n//       }\n//     } catch (error) {\n//       console.error('Error accessing webcam:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={startWebcam}>Start Webcam</button>\n//       <video ref={videoRef} autoPlay />\n//     </div>\n//   );\n// }\n\n// export default Webcam;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WebcamCapture() {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [result, setResult] = useState('');\n  useEffect(() => {\n    const startWebcam = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        videoRef.current.srcObject = stream;\n      } catch (error) {\n        console.error('Error accessing webcam:', error);\n      }\n    };\n    startWebcam();\n  }, []);\n  const captureVideoFrame = async () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    if (canvas && video) {\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Canvasから画像データを取得\n      const imageDataURL = canvas.toDataURL('image/jpeg');\n\n      // 画像データを送信\n      const response = await fetch('http://your-fastapi-server-endpoint/face-detection', {\n        method: 'POST',\n        body: JSON.stringify({\n          image: imageDataURL\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.result === 'Yes') {\n          setResult('Yes');\n        } else {\n          setResult('No');\n        }\n      } else {\n        console.error('Error sending image for analysis');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: captureVideoFrame,\n      children: \"Capture and Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Face Detected: \", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(WebcamCapture, \"9YokJH/751CXrhbJkafyNi2E4d4=\");\n_c = WebcamCapture;\nexport default WebcamCapture;\nvar _c;\n$RefreshReg$(_c, \"WebcamCapture\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","WebcamCapture","_s","videoRef","canvasRef","result","setResult","startWebcam","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","captureVideoFrame","canvas","ctx","getContext","drawImage","width","height","imageDataURL","toDataURL","response","fetch","method","body","JSON","stringify","image","headers","ok","data","json","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","style","display","_c","$RefreshReg$"],"sources":["/usr/src/app/src/App.tsx"],"sourcesContent":["// import React, { useRef } from 'react';\n\n// function Webcam() {\n//   const videoRef = useRef<HTMLVideoElement | null>(null);\n\n//   const startWebcam = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//       if (videoRef.current) {\n//         videoRef.current.srcObject = stream;\n//       }\n//     } catch (error) {\n//       console.error('Error accessing webcam:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={startWebcam}>Start Webcam</button>\n//       <video ref={videoRef} autoPlay />\n//     </div>\n//   );\n// }\n\n// export default Webcam;\n\nimport React, { useEffect, useRef, useState } from 'react';\n\nfunction WebcamCapture() {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [result, setResult] = useState('');\n\n  useEffect(() => {\n    const startWebcam = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n        videoRef.current.srcObject = stream;\n      } catch (error) {\n        console.error('Error accessing webcam:', error);\n      }\n    };\n\n    startWebcam();\n  }, []);\n\n  const captureVideoFrame = async () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n\n    if (canvas && video) {\n      const ctx = canvas.getContext('2d');\n      ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Canvasから画像データを取得\n      const imageDataURL = canvas.toDataURL('image/jpeg');\n\n      // 画像データを送信\n      const response = await fetch('http://your-fastapi-server-endpoint/face-detection', {\n        method: 'POST',\n        body: JSON.stringify({ image: imageDataURL }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.result === 'Yes') {\n          setResult('Yes');\n        } else {\n          setResult('No');\n        }\n      } else {\n        console.error('Error sending image for analysis');\n      }\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={captureVideoFrame}>Capture and Analyze</button>\n      <video ref={videoRef} autoPlay />\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\n      <p>Face Detected: {result}</p>\n    </div>\n  );\n}\n\nexport default WebcamCapture;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/usr/src/app/src/ShachiObject.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ThreeDModel() {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n\n    // シーンの作成\n    const scene = new THREE.Scene();\n\n    // カメラの作成\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n    camera.lookAt(0, 0, 0);\n\n    // 平行光源を作成\n    const directionalLight = new THREE.DirectionalLight(0xffffff);\n    directionalLight.intensity = 5;\n    directionalLight.position.set(5, 5, 10);\n    scene.add(directionalLight);\n\n    // 3Dモデルの読み込み\n    const objLoader = new GLTFLoader();\n    objLoader.load('/monkey.glb', function (obj) {\n      scene.add(obj.scene);\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'block'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n_s(ThreeDModel, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ThreeDModel;\nexport default ThreeDModel;\nvar _c;\n$RefreshReg$(_c, \"ThreeDModel\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","jsxDEV","_jsxDEV","ThreeDModel","_s","canvasRef","canvas","current","renderer","WebGLRenderer","antialias","alpha","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","z","lookAt","directionalLight","DirectionalLight","intensity","set","add","objLoader","load","obj","animate","requestAnimationFrame","render","ref","style","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/usr/src/app/src/ShachiObject.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nfunction ThreeDModel() {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true,\n    })\n\n    // シーンの作成\n    const scene = new THREE.Scene();\n\n    // カメラの作成\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n    camera.lookAt(0, 0, 0);\n\n    // 平行光源を作成\n    const directionalLight = new THREE.DirectionalLight(0xffffff);\n    directionalLight.intensity = 5;\n    directionalLight.position.set(5, 5, 10);\n    scene.add(directionalLight);\n\n    // 3Dモデルの読み込み\n    const objLoader = new GLTFLoader();\n    objLoader.load('/monkey.glb', function (obj) {      \n      scene.add(obj.scene);\n    });\n\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n\n    animate();\n  }, []);\n\n  return <canvas ref={canvasRef} style={{ display: 'block' }} />;\n}\n\nexport default ThreeDModel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,uCAAuC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,SAAS,GAAGP,MAAM,CAA2B,IAAI,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAI,CAACD,MAAM,EAAE;IAEb,MAAME,QAAQ,GAAG,IAAIT,KAAK,CAACU,aAAa,CAAC;MACvCC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAE;IACT,CAAC,CAAC;;IAEF;IACA,MAAMC,KAAK,GAAG,IAAIb,KAAK,CAACc,KAAK,CAAC,CAAC;;IAE/B;IACA,MAAMC,MAAM,GAAG,IAAIf,KAAK,CAACgB,iBAAiB,CAAC,EAAE,EAAET,MAAM,CAACU,WAAW,GAAGV,MAAM,CAACW,YAAY,EAAE,GAAG,EAAE,IAAI,CAAC;IACnGH,MAAM,CAACI,QAAQ,CAACC,CAAC,GAAG,CAAC;IACrBL,MAAM,CAACM,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;IAEtB;IACA,MAAMC,gBAAgB,GAAG,IAAItB,KAAK,CAACuB,gBAAgB,CAAC,QAAQ,CAAC;IAC7DD,gBAAgB,CAACE,SAAS,GAAG,CAAC;IAC9BF,gBAAgB,CAACH,QAAQ,CAACM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;IACvCZ,KAAK,CAACa,GAAG,CAACJ,gBAAgB,CAAC;;IAE3B;IACA,MAAMK,SAAS,GAAG,IAAI1B,UAAU,CAAC,CAAC;IAClC0B,SAAS,CAACC,IAAI,CAAC,aAAa,EAAE,UAAUC,GAAG,EAAE;MAC3ChB,KAAK,CAACa,GAAG,CAACG,GAAG,CAAChB,KAAK,CAAC;IACtB,CAAC,CAAC;IAEF,SAASiB,OAAOA,CAAA,EAAG;MACjBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BrB,QAAQ,CAACuB,MAAM,CAACnB,KAAK,EAAEE,MAAM,CAAC;IAChC;IAEAe,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO3B,OAAA;IAAQ8B,GAAG,EAAE3B,SAAU;IAAC4B,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE;AAAClC,EAAA,CAzCQD,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AA2CpB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}